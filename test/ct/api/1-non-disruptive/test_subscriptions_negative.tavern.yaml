# MIT License
#
# (C) Copyright [2023] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the HMNFD subscriptions API
# Author: Mitch Schooler
# Service: Hardware Management Node Fanout Daemon

# HMS test metrics test cases: 17
# PUT /subscriptions fails
# GET /subscriptions/{xname} invalid xname
# GET /subscriptions/{xname} non-present xname
# DELETE /subscriptions/{xname}/agents invalid xname
# DELETE /subscriptions/{xname}/agents non-present xname
# POST /subscriptions/{xname}/agents/{agent} invalid xname
# POST /subscriptions/{xname}/agents/{agent} missing payload
# POST /subscriptions/{xname}/agents/{agent} payload missing components
# POST /subscriptions/{xname}/agents/{agent} payload empty components
# POST /subscriptions/{xname}/agents/{agent} payload missing url
# POST /subscriptions/{xname}/agents/{agent} payload empty url
# POST /subscriptions/{xname}/agents/{agent} payload no event triggers
# PATCH /subscriptions/{xname}/agents/{agent} invalid xname
# PATCH /subscriptions/{xname}/agents/{agent} missing payload
# DELETE /subscriptions/{xname}/agents/{agent} invalid xname
# DELETE /subscriptions/{xname}/agents/{agent} non-present xname
# DELETE /subscriptions/{xname}/agents/{agent} non-present agent
---
test_name: Verify /subscriptions rejects unsupported methods

stages:
  # PUT /subscriptions fails
  - name: Ensure that /subscriptions rejects unsupported PUT operations
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions"
      method: PUT
      verify: !bool "{verify}"
    response:
      status_code: 405

---
test_name: Verify negative cases for the HMNFD /subscriptions API

stages:
  - name: Retrieve a node from HSM to be used in later stages
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Node&enabled=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          node_xname: Components[0].ID

  # GET /subscriptions/{xname} invalid xname
  - name: Verify that HMNFD properly handles requests to retrieve state change notification subscriptions for invalid xnames
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/fake"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Invalid XName in URL path"
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/fake"
              status:
                type: int
                required: True
                enum:
                  - 400

  # GET /subscriptions/{xname} non-present xname
  - name: Verify that HMNFD properly handles requests to retrieve state change notification subscriptions for non-present xnames
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/x9999c7s9b9n9"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              SubscriptionList: null

  # DELETE /subscriptions/{xname}/agents invalid xname
  - name: Verify that HMNFD properly handles requests to delete state change notification subscriptions for invalid xnames
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/fake/agents"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Invalid XName in URL path"
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/fake/agents"
              status:
                type: int
                required: True
                enum:
                  - 400

  # DELETE /subscriptions/{xname}/agents non-present xname
  - name: Verify that HMNFD properly handles requests to delete state change notification subscriptions for non-present xnames
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/x9999c7s9b9n9/agents"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 204

  # POST /subscriptions/{xname}/agents/{agent} invalid xname
  - name: Verify that HMNFD properly handles requests to create state change notification subscriptions for invalid xnames
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/fake/agents/{test_agent}"
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Invalid XName in URL path"
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/fake/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # POST /subscriptions/{xname}/agents/{agent} missing payload
  - name: Verify that HMNFD properly handles requests to create state change notification subscriptions with missing payloads
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Error unmarshalling JSON payload"
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # POST /subscriptions/{xname}/agents/{agent} payload missing components
  - name: Verify that HMNFD properly handles requests to create state change notification subscriptions with payloads missing the components field
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
      json: {"Enabled":true,"States":["on","off","empty"],"Url":"http://{test_agent_host}/boot/v1/scn"}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Subscription request missing Components array field."
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # POST /subscriptions/{xname}/agents/{agent} payload empty components
  - name: Verify that HMNFD properly handles requests to create state change notification subscriptions with payloads containing an empty components field
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
      json: {"Components":[],"Enabled":true,"States":["on","off","empty"],"Url":"http://{test_agent_host}/boot/v1/scn"}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Subscription request missing Components array field."
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # POST /subscriptions/{xname}/agents/{agent} payload missing url
  - name: Verify that HMNFD properly handles requests to create state change notification subscriptions with payloads missing the url field
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
      json: {"Components":["{node_xname}"],"Enabled":true,"States":["on","off","empty"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Subscription request missing Url field."
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # POST /subscriptions/{xname}/agents/{agent} payload empty url
  - name: Verify that HMNFD properly handles requests to create state change notification subscriptions with payloads containing an empty url field
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
      json: {"Components":["{node_xname}"],"Enabled":true,"States":["on","off","empty"],"Url":""}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Subscription request missing Url field."
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # POST /subscriptions/{xname}/agents/{agent} payload no event triggers
  - name: Verify that HMNFD properly handles requests to create state change notification subscriptions with payloads that have no event triggers
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
      json: {"Components":["{node_xname}"],"Url":"http://{test_agent_host}/boot/v1/scn"}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Subscription request needs at least one of: States, SoftwareStatus, Roles, SubRoles."
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # PATCH /subscriptions/{xname}/agents/{agent} invalid xname
  - name: Verify that HMNFD properly handles requests to update state change notification subscriptions for invalid xnames
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/fake/agents/{test_agent}"
      method: PATCH
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Invalid XName in URL path"
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/fake/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # PATCH /subscriptions/{xname}/agents/{agent} missing payload
  - name: Verify that HMNFD properly handles requests to update state change notification subscriptions with missing payloads
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
      method: PATCH
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Error unmarshalling JSON payload"
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/{node_xname}/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # DELETE /subscriptions/{xname}/agents/{agent} invalid xname
  - name: Verify that HMNFD properly handles requests to delete a specific state change notification subscription for an invalid xname
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/fake/agents/{test_agent}"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Invalid Request"
              detail:
                type: str
                required: True
                enum:
                  - "Invalid XName in URL path"
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/fake/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # DELETE /subscriptions/{xname}/agents/{agent} non-present xname
  - name: Verify that HMNFD properly handles requests to delete a specific state change notification subscription for a non-present xname
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/x9999c7s9b9n9/agents/{test_agent}"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad DELETE request"
              detail:
                type: str
                required: True
                enum:
                  - "No matching subscription for DELETE"
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/x9999c7s9b9n9/agents/{test_agent}"
              status:
                type: int
                required: True
                enum:
                  - 400

  # DELETE /subscriptions/{xname}/agents/{agent} non-present agent
  - name: Verify that HMNFD properly handles requests to delete a specific state change notification subscription for a non-present agent
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions/{node_xname}/agents/fake"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad DELETE request"
              detail:
                type: str
                required: True
                enum:
                  - "No matching subscription for DELETE"
              instance:
                type: str
                required: True
                enum:
                  - "/hmi/v2/subscriptions/{node_xname}/agents/fake"
              status:
                type: int
                required: True
                enum:
                  - 400
