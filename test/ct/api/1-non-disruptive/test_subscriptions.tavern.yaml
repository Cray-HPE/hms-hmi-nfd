# MIT License
#
# (C) Copyright [2023] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the HMNFD subscriptions API
# Author: Mitch Schooler
# Service: Hardware Management Node Fanout Daemon

# HMS test metrics test cases: 1
# GET /subscriptions all
---
test_name: Verify the HMNFD subscriptions API

stages:
  # GET /subscriptions all
  - name: Verify that the HMNFD state change notification subscriptions can be retrieved
    request:
      url: "{hmnfd_base_url}/hmi/v2/subscriptions"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              SubscriptionList:
                type: seq
                matching: all
                required: False
                sequence:
                  - type: map
                    required: True
                    mapping:
                      Components:
                        type: seq
                        matching: all
                        required: True
                        sequence:
                          - type: str
                      Subscriber:
                        type: str
                        required: True
                      SubscriberComponent:
                        type: str
                        required: True
                      SubscriberAgent:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      Roles:
                        type: seq
                        matching: all
                        required: False
                        sequence:
                          - type: str
                      SoftwareStatus:
                        type: seq
                        matching: all
                        required: False
                        sequence:
                          - type: str
                      States:
                        type: seq
                        matching: all
                        #TODO: test to see if it's possible to exclude 'States', haven't seen an example of this in the wild
                        required: False
                        sequence:
                          - type: str
                      Url:
                        type: str
                        required: True
