# MIT License
#
# (C) Copyright [2023] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the HMNFD params APIs
# Author: Mitch Schooler
# Service: Hardware Management Node Fanout Daemon

# HMS test metrics test cases: TODO
# GET /params original

#TODO
# PATCH /params new
# GET /params new
# PATCH /params restore
# GET /params restore
---
test_name: Verify the HMNFD params APIs

stages:
  # GET /params API
  - name: Verify that the HMNFD service parameters can be retrieved
    request:
      url: "{hmnfd_base_url}/hmi/v2/params"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              Debug:
                type: int
                required: True
              KV_url:
                type: str
                required: True
              Nosm:
                type: int
                required: True
              Port:
                type: int
                required: True
              Scn_in_url:
                type: str
                required: True
              Scn_max_cache:
                type: int
                required: True
              Scn_cache_delay:
                type: int
                required: True
              Scn_retries:
                type: int
                required: True
              Scn_backoff:
                type: int
                required: True
              SM_retries:
                type: int
                required: True
              SM_timeout:
                type: int
                required: True
              SM_url:
                type: str
                required: True
              Telemetry_host:
                type: str
                required: True
              Use_telemetry:
                type: int
                required: True
      save:
        json:
          debug_orig: Debug
          kv_url_orig: KV_url
          nosm_orig: Nosm
          port_orig: Port
          scn_in_url_orig: Scn_in_url
          scn_max_cache_orig: Scn_max_cache
          scn_cache_delay_orig: Scn_cache_delay
          scn_retries_orig: Scn_retries
          scn_backoff_orig: Scn_backoff
          sm_retries_orig: SM_retries
          sm_timeout_orig: SM_timeout
          sm_url_orig: SM_url
          telemetry_host_orig: Telemetry_host
          use_telemetry_orig: Use_telemetry
