version: '3'

# Use a named network for ease in hook-up with other containers.

networks:
  ttest:
    driver: bridge


services:
  # Fake State manager.  Responds to SCN subscriptions from hmnfd.
  # This is used instead of the real State Manager for simplicity.
  fakesm:
    build:
      context: ./
      dockerfile: Dockerfile.fake-hsm
    image: fake-hsm:${HTAG}_${HSUFFIX}
    hostname: fake_hsm_${HSUFFIX}
    container_name: fake_hsm_${HSUFFIX}
    ports:
      - "${FAKE_SM_PORT}:${FAKE_SM_PORT}"
    environment:
      - PORT=${FAKE_SM_PORT}
    networks: 
      - ttest

  # Fake node/SCN subscriber.  This is a small app that subscribes
  # for SCNs and has an API to send them to.  It also provides
  # APIs to tell it to perform its SCN subscriptions and to query
  # the last SCN received.  This is necessary for more thorough
  # testing of hmnfd.  Using real nodes will not have this level
  # of control or query.  We'll create 2 of these.
  fakesub_a:
    build:
      context: ./
      dockerfile: Dockerfile.fake-subscriber
    image: fake-subscriber:${HTAG}_${HSUFFIX}
    hostname: fake_subscriber_a_${HSUFFIX}
    container_name: fake_subscriber_a_${HSUFFIX}
    ports:
      - "${FAKE_SUBA_PORT}:${FAKE_SUBA_PORT}"
    environment:
      - NODE=x0c0s0b0n0
      - PORT=${FAKE_SUBA_PORT}
      - SUBNODES=allnodes
      - SUBSTATES=On
      - SUBSWSTATUS=AdminDown
      - ROLES=Service
      - SUBROLES=ncn-w
      - ENABLED=1
      - NFDSUBURL=http://hmnfd_${HSUFFIX}:${FAKE_HMNFD_PORT}/hmi/v1/subscribe
      - FAKEHOST=fake_subscriber_a_${HSUFFIX}
    networks: 
      - ttest

  fakesub_b:
    build:
      context: ./
      dockerfile: Dockerfile.fake-subscriber
    image: fake-subscriber:${HTAG}_${HSUFFIX}
    hostname: fake_subscriber_b_${HSUFFIX}
    container_name: fake_subscriber_b_${HSUFFIX}
    ports:
      - "${FAKE_SUBB_PORT}:${FAKE_SUBB_PORT}"
    environment:
      - NODE=x0c0s0b0n1
      - PORT=${FAKE_SUBB_PORT}
      - SUBNODES=x0c0s0b0n3,x0c0s0b0n4
      - SUBSTATES=Ready
      - NFDSUBURL=http://hmnfd_${HSUFFIX}:${FAKE_HMNFD_PORT}/hmi/v1/subscribe
      - FAKEHOST=fake_subscriber_b_${HSUFFIX}
    networks: 
      - ttest

  etcd:
    image: artifactory.algol60.net/quay.io/coreos/etcd:v3.4.7
    hostname: etcd-server_${HSUFFIX}
    container_name: etcd_server_${HSUFFIX}
    ports:
      - "${FAKE_ETCD_A_PORT}:${FAKE_ETCD_A_PORT}"
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd_server_${HSUFFIX}:${FAKE_ETCD_A_PORT}
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:${FAKE_ETCD_A_PORT}
    networks: 
      - ttest

  # Special build of the hmnfd container with a couple of tweaks to
  # the hmnfd command line to accomodate our test apps.
  hmnfd:
    build:
      context: ./
      dockerfile: Dockerfile.hmnfd-apitest
    image: hmnfd:${HTAG}_${HSUFFIX}
    hostname: hmnfd_${HSUFFIX}
    container_name: hmnfd_${HSUFFIX}
    ports:
      - "${FAKE_HMNFD_PORT}:${FAKE_HMNFD_PORT}"
    environment:
      - SM_URL=http://fake_hsm_${HSUFFIX}:${FAKE_SM_PORT}/hsm/v2
      - PORT=${FAKE_HMNFD_PORT}
      - KV_URL=http://etcd_server_${HSUFFIX}:${FAKE_ETCD_A_PORT}
    networks: 
      - ttest

