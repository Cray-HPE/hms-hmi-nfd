# MIT License
#
# (C) Copyright [2019-2021] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Dockerfile for building HMS hmnfd (HMI Notification Fanout Daemon)
# for integration/API testing.
# Author: mpkelly
# Date: 12-February 2019

# Integration TEST stage

# Base image contains everything needed for Go building, just build.
FROM arti.dev.cray.com/baseos-docker-master-local/golang:1.16-alpine3.13 AS builder

RUN set -ex \
    && apk update \
    && apk add build-base

RUN go env -w GO111MODULE=auto

# Copy all the necessary files to the image.
COPY cmd $GOPATH/src/stash.us.cray.com/HMS/hms-hmi-nfd/cmd
COPY vendor $GOPATH/src/stash.us.cray.com/HMS/hms-hmi-nfd/vendor

# Base image contains everything needed for Go building, just build.

RUN set -ex && go build -v -i -o /usr/local/bin/hmnfd stash.us.cray.com/HMS/hms-hmi-nfd/cmd/hmi-nfd

### Final Stage ###

FROM arti.dev.cray.com/baseos-docker-master-local/alpine:3.13
LABEL maintainer="Hewlett Packard Enterprise"
STOPSIGNAL SIGTERM

# Copy the final binary.  

COPY --from=builder /usr/local/bin/hmnfd /usr/local/bin

# Run the daemon

ENV DEBUG=3
ENV SM_URL="http://fakesm:27999/hsm/v1"
ENV INBOUND_SCN_URL=""
ENV SM_RETRIES=3
ENV SM_TIMEOUT=10
ENV PORT=28600
ENV USE_TELEMETRY=""
ENV TELEMETRY_HOST=""
ENV NOSM=""

# Force fanout sync mode to insure there is no indeterminate ordering of 
# SCN reception

ENV HMNFD_FANOUT_SYNC=1

# Use this for in-memory datastore (no good for API testing)
#ENV KV_URL="mem:"

# Use this for the docker-compose usage of ETCD.  NOTE: not sure why
# this isn't 'etcd-server' rather than 'etcd'??

ENV KV_URL="http://etcd:2379"
#ENV KV_URL="http://etcd-server:2379"

CMD ["sh", "-c", "hmnfd --debug=$DEBUG $NOSM --sm_url=$SM_URL --sm_retries=$SM_RETRIES --sm_timeout=$SM_TIMEOUT -port=$PORT --kv_url=$KV_URL --scn_in_url=$INBOUND_SCN_URL $USE_TELEMETRY --telemetry_host=$TELEMETRY_HOST"]
